{"searchDocs":[{"title":"Code Contribution","type":0,"sectionRef":"#","url":"/landingpage/developer-guide/code-contribution","content":"","keywords":"","version":"Next"},{"title":"Repository Creation:​","type":1,"pageTitle":"Code Contribution","url":"/landingpage/developer-guide/code-contribution#repository-creation","content":" Create a new repository on GitHub with an appropriate name and description. Access controls are automatically applied from the project’s list of users (PLs, committers, contributors).As a good practice, we recommend adding the usual legal files, as defined in https://www.eclipse.org/projects/tools/documentation.php The licence needs to be the one selected for the Eclipse XFSC project, i.e. Apache 2.Submit an issue in the HelpDesk1 to configure any admin-specific repository settings (e.g. branch protection). ","version":"Next","tagName":"h3"},{"title":"Developer Guide","type":0,"sectionRef":"#","url":"/landingpage/developer-guide/","content":"Developer Guide Welcome to the Developer Hub of Eclipse XFSC! Here, you’ll find resources specifically designed for XFSC developers. This includes details about the significance of XFSC being part of the Eclipse Foundation, guidelines for contributing, and the procedures for releasing software in Eclipse XFSC. Should you have any questions about these guidelines or want to connect with others, please visit the Community page. It lays the groundwork for your involvement in Eclipse XFSC and offers a comprehensive overview of our project and community.","keywords":"","version":"Next"},{"title":"Code Review","type":0,"sectionRef":"#","url":"/landingpage/developer-guide/code-review","content":"","keywords":"","version":"Next"},{"title":"Onboarding Process​","type":1,"pageTitle":"Code Review","url":"/landingpage/developer-guide/code-review#onboarding-process","content":" Review the project's contribution guidelines and code of conduct.Set up the development environment as per project requirements.Fork the repository to their personal space on Eclipse’s GitHub. Clone the repository to their local machine.Create a new branch for their contributions.Submit a merge request (MR, aka PR on GitHub) for their changes. Engage publicly in discussions and revisions as needed. Once the MR is approved, their contributions are merged into the repository by a committer. New contributors may be assigned a mentor for guidance and support.   ","version":"Next","tagName":"h3"},{"title":"Work Stream ​","type":1,"pageTitle":"Code Review","url":"/landingpage/developer-guide/code-review#work-stream","content":" Contributors work on their assigned features, components, or modules within the repository. Maintain an active, public communication channel for contributors to collaborate and seek assistance (e.g., mailing list of GitLab’s issues). Regularly update the repository with new features, bug fixes, and improvements.  ","version":"Next","tagName":"h3"},{"title":"Project Roles","type":0,"sectionRef":"#","url":"/landingpage/developer-guide/project-roles","content":"","keywords":"","version":"Next"},{"title":"Contributor​","type":1,"pageTitle":"Project Roles","url":"/landingpage/developer-guide/project-roles#contributor","content":" Anyone with an Eclipse account and a signed ECA is an Eclipse contributor. Contributors have read access. On GitHub repositories they have the read role.  Eclipse XFSC Contributor List: https://projects.eclipse.org/projects/technology.xfsc/who Committers can add new contributors to the XFSC project, see the Handbook for details.  Note: This is the PMI (Project Management Interface) https://projects.eclipse.org/projects/technology.xfsc.  ","version":"Next","tagName":"h3"},{"title":"Committer​","type":1,"pageTitle":"Project Roles","url":"/landingpage/developer-guide/project-roles#committer","content":" Eclipse XFSC Committer List: https://projects.eclipse.org/projects/technology.xfsc/who For Eclipse projects (and the open source world in general), committers are the ones who hold the keys.  Committers decide what code goes into the code base, they decide how a project builds, and they ultimately decide what gets delivered to the adopter community. With awesome power, comes awesome responsibility, and so the Open Source Rules of Engagement described by the Eclipse Foundation Development Process, puts meritocracy on equal footing with transparency and openness: becoming a committer isn’t necessarily hard, but it does require a demonstration of merit. (From the Handbook)   Tasks:  Operate in an open, transparent, and meritocratic manner; Write code (and other project content) and can push it directly into the project’s source code repository; Review contributions (merge and pull requests) from contributors; Engage in the Intellectual Property Due Diligence Process; Nominate new committer; Vote in committer and project lead elections; Engage in the project planning process; Otherwise represent the interests of the open source project.   On repositories committer have the write role.   ","version":"Next","tagName":"h3"},{"title":"Contributers vs. Committers​","type":1,"pageTitle":"Project Roles","url":"/landingpage/developer-guide/project-roles#contributers-vs-committers","content":" Contributors: Individuals who have expressed their intent to contribute to the project. Contribute by submitting pull requests (MRs) with changes.May have limited access to merge MRs, typically requiring approval from committers or maintainers.Expected to follow the project's contribution guidelines. Have the reporter role on XFSC's GitHub. Committers: Experienced contributors who have demonstrated a deep understanding of the project and Eclipse processes.Have the authority to merge MRs directly into the repository.Responsible for reviewing and maintaining the quality of contributions, managing issues and vulnerabilities, and supporting contributors.May be involved in project decision-making and roadmap planning.Have the developer role on XFSC's GitHub.  ","version":"Next","tagName":"h3"},{"title":"Eclipse Project Lead​","type":1,"pageTitle":"Project Roles","url":"/landingpage/developer-guide/project-roles#eclipse-project-lead","content":" An Eclipse Project Lead is a project committer with enhanced rights and responsibilities. Each project can have more than one project lead, elected by the project committers.  Tasks:  Project leads are responsible for ensuring that project committers are following the rules.Project leads have the ability to retire committers.Project leads have to approve e.g. infrastructure request, reviews.  See the Handbook  Contact the PMC:  Using xfsc-dev  To post a message to all the list members, send email to xfsc-dev@eclipse.org. You must be subscribed to the list before you can post. To access a web archive of this list, visit the xfsc-dev Archives or subscribe to this list's RSS feed Note: You have to be subscribed to the to write to the list.   See the Handbook  ","version":"Next","tagName":"h3"},{"title":"Eclipse Management Organization (EMO)​ ​","type":1,"pageTitle":"Project Roles","url":"/landingpage/developer-guide/project-roles#eclipse-management-organization-emo","content":" If you have a question that cannot be answered by project lead, mentor, or PMC, ask the EMO. The best method of contact with the EMO is by email (emo@eclipse-foundation.org).  See the Handbook ","version":"Next","tagName":"h3"},{"title":"Onboarding Contributers","type":0,"sectionRef":"#","url":"/landingpage/developer-guide/on-boarding","content":"","keywords":"","version":"Next"},{"title":"How to Become a Contributor: ​","type":1,"pageTitle":"Onboarding Contributers","url":"/landingpage/developer-guide/on-boarding#how-to-become-a-contributor","content":" This section provides information and links to relevant resources before you start contributing to Eclipse XFSC Project and onboarding of contributors:  Create Eclipse Foundation account hereUse the same email address that you use in GitLab for your contributions, e.g. if you contribute on behalf of your company, you must create the account with your company email addressSign the Eclipse Contributor Agreement (ECA)Add your GitHub Account to your Eclipse profile (Section: Social Media Links) Subscribe to the Eclipse XFSC Mailing List: Sending an email to the project’s mailing list or lauresha.toska@eco.de to ask for contributors role.Get familiar with the Eclipse Foundation Project Handbook  ","version":"Next","tagName":"h3"},{"title":"Dev Mailinglist​:​","type":1,"pageTitle":"Onboarding Contributers","url":"/landingpage/developer-guide/on-boarding#dev-mailinglist","content":" The dev mailinglist is the official channel for project communication, use it for questions, announcing news or discuss relevant topics.  All of the answers don’t need to necessarily come from project committers: empower your community to answer questions. When community members do provide answers that require further clarification (either they are not complete, or are not 100% correct), do so politely. The more welcome you make your community feel, the more likely it is that your project will be successful.  XFSC Dev Mail adress: https://projects.eclipse.org/projects/technology.xfsc/contact  Every contributor should be subscribed to https://projects.eclipse.org/projects/technology.xfsc/contact. (Committers have to be subscribed to the list and are added automatically when gaining the committer status). ","version":"Next","tagName":"h3"},{"title":"Specifications","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/","content":"","keywords":"","version":"Next"},{"title":"XFSC Specifications Phase 1​","type":1,"pageTitle":"Specifications","url":"/landingpage/xfsc-toolbox/#xfsc-specifications-phase-1","content":" The “Specification Phase 1” page provides an overview of all, technical specifications that were prepared in spring 2021 and awarded in an EU-wide tender. In December 2021, the successful bidders were published, implementing a first set of federation services and thus enabling an open source reference implementation of GXFS.  Specification Phase 1  ","version":"Next","tagName":"h3"},{"title":"XFSC Specification Phase 2​","type":1,"pageTitle":"Specifications","url":"/landingpage/xfsc-toolbox/#xfsc-specification-phase-2","content":" The second Phase of the XFSC specification builds upon the groundwork laid in GXFS specification Phase 1 and aligns with the principles of the Gaia-X Trust Framework 22.10. The recently defined specifications and supplementary requirements apply to these specific components.  Specification Phase 2 ","version":"Next","tagName":"h3"},{"title":"Decentralized Catalogue and Contracting Service (CCS)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/decentralized-catalogue/","content":"","keywords":"","version":"Next"},{"title":"Detailed Information and Links:​","type":1,"pageTitle":"Decentralized Catalogue and Contracting Service (CCS)","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/decentralized-catalogue/#detailed-information-and-links","content":"   Federated Catalogue (CAT) Self-Description Wizard (SD-Wizard) Data Exchange Logging Service (DELS) Data Contract Services (DCS) ","version":"Next","tagName":"h3"},{"title":"Federated Catalogue(CAT)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/decentralized-catalogue/federate-catalog","content":"Federated Catalogue(CAT) “Core Catalogue Features” encompass a Catalogue where Gaia-X resources, assets and participants can be found by potential consumers and end users. Resources, Assets and Participants in GAIA-X are described by Self-Descriptions. Self-Descriptions intended for public usage can be loaded into the respective Catalogue. The goal of the Catalogue is to enable consumers and end users to find best-matching offerings and to monitor for relevant changes of the offerings. In the Catalogue, many Self-Descriptions are a) stored as raw JSON-LD files and b) integrated into a Self-Description Graph. By following references between Self-Descriptions, advanced queries across individual Self-Descriptions become possible. The Federated Catalogue consists of functional components that are each described in the respective specification document: Self-Description Storage and LifecycleSelf-Description GraphREST InterfaceSelf-Description VerificationSchema Management Repository","keywords":"","version":"Next"},{"title":"Data Exchange Logging Service (DELS)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/decentralized-catalogue/data-exchange","content":"Data Exchange Logging Service (DELS) In this tender the lot “Data Exchange Logging Service” (DELS) is being awarded. The purpose of the service functions to be implemented is to provide evidence that data has been (a) submitted and (b) received and (c) rules and obligations (Data Usage Policies) were enforced or violated within the Gaia-X ecosystem. This supports the clearing of operational issues, but also eventually the clearing of fraudulent transactions. Additionally, the data consumer can track and provide evidence on the enforcement or violation of data usage policies. The log can be used as a basis for clearing and billing, but this is not in scope of the Gaia-X Federation Services for Release 1. From a functional perspective, the DELS provides an interface to track logging notifications and to read the logging messages afterward. The logging mechanism is specified in accordance with W3C linked data notifications. Repository","keywords":"","version":"Next"},{"title":"Data Contract Services (DCS)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/decentralized-catalogue/data-contract","content":"Data Contract Services (DCS) “Data Contract Service” enables data transactions in a secure, trusted, and auditable way within the Gaia-X ecosystem. It offers interfaces for the negotiation of data contracts detailing the agreed terms (Data Asset Usage Policy) for planned data exchange. The service is not meant to handle the transaction of data (that is described in the negotiated data contracts). From a functional perspective, the Data Contract Service provides a formal data transaction initiation handshake between the data provider and the data consumer. Basically, the service allows sending offers and counteroffers resulting in agreement or rejection. The contract is packaged in a human and a machine-readable format based on ODRL. The Data Contract Service provides endpoints for initiating the handshake and retrieving the contract for later reference. It provides log tokens to Data Provider and Data Consumer (except when logging is forbidden) to authorize metadata logging at the Logging Service (the Logging Service is being awarded in a separate tender). Repository","keywords":"","version":"Next"},{"title":"XFSC FOSS Components","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/","content":"","keywords":"","version":"Next"},{"title":"ICAM & Trust over IP (Identity, Credential and Access Management)​","type":1,"pageTitle":"XFSC FOSS Components","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/#icam--trust-over-ip-identity-credential-and-access-management","content":" These services empower federated ecosystems, like federations, to authenticate and authorise users and systems in a decentralised, self-sovereign manner, ensuring trust without depending on a central authority. These services utilise credential validation and technology functionalities to maintain a consistent level of trust among all participants in the federation.  Authentication/Authorisation Service (AAS)Organisation Credential Manager (OCM)Personal Credential Manager (PCM)Trust Services API (TSA)Notarisation Service (NOT)Trust Management Infrastructure (TRAIN)  ","version":"Next","tagName":"h3"},{"title":"Decenralised Catalogue and Contracting Service (CCS)​","type":1,"pageTitle":"XFSC FOSS Components","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/#decenralised-catalogue-and-contracting-service-ccs","content":" The Decentralised Catalogue and Contracting Service act as an inventory, allowing participants to discover, understand, and use available data in an ecosystem. The Federated Catalogue serves as a repository for a Federation, enabling participants to find each other's information and services through Self-Descriptions. The toolbox provides code for groups to create their own Catalogue and includes services for contract negotiations and tracking data transactions, giving participants control over their data usage within the group.  Federated Catalogue (CAT)Self-Description Wizard (SD-Wizard)Data Contract Services (DCS)Data Exchange Logging Service (DELS)  ","version":"Next","tagName":"h3"},{"title":"Orchestration & Monitoring​","type":1,"pageTitle":"XFSC FOSS Components","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/#orchestration--monitoring","content":" Orchestration and Monitoring services are vital for managing complex ecosystems, ensuring seamless and compliant operations. The distinction lies in their focus and functionality: ORCE (Orchestration Engine) is tailored for orchestrating tasks, particularly emphasizing complex application networking, while ORC (Orchestration) is specifically designed for managing the life cycle of infrastructure services, including deployment, updates, and deletion based on actions from consumers or providers. Additionally, the Continuous Automated Monitoring (CAM) service ensures transparency through automated compliance monitoring, providing insights into service adherence to Federation rules.  Orchestration Engine (ORCE)Service Mesh Orchestrator, (ORC)Continuous Automated Monitoring (CAM)  ","version":"Next","tagName":"h3"},{"title":"Portal (POR)​","type":1,"pageTitle":"XFSC FOSS Components","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/#portal-por","content":" The Portal within XFSC toolbox serves as an integration layer, highlighting Federation Services and providing user-friendly access to onboarding, accreditation, service discovery, orchestration, and delivery. It includes key features such as searching, exploring, and displaying content from the Federated Catalogue. Users can register and onboard new Participants, accessing onboarding details, with the Federation approving registrations and issuing verified credentials. Furthermore, Participants can orchestrate and provision services through the portal.  The initialset of services includes: ​      Identity, Credential &amp; Access Management Decenralised Catalogue and Contracting Service Orchestration &amp; Monitoring Portal ","version":"Next","tagName":"h3"},{"title":"Self-Description Wizard (SD-Wizard)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/decentralized-catalogue/self-description","content":"Self-Description Wizard (SD-Wizard) The SD Creation Wizard is developed to assist in creating Gaia-X Self-Descriptions based on ontologies and SHACL shapes. Self-Descriptions describe Entities from the Gaia-X Conceptual Model in a machine interpretable format. Repository","keywords":"","version":"Next"},{"title":"","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/","content":"","keywords":"","version":"Next"},{"title":"ICAM & Trust over IP Identity, Credential and Access Management​","type":1,"pageTitle":"","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/#icam--trust-over-ip-identity-credential-and-access-management","content":" These services empower federated ecosystems, like federations, to authenticate and authorise users and systems in a decentralised, self-sovereign manner, ensuring trust without depending on a central authority. These services utilise credential validation and technology functionalities to maintain a consistent level of trust among all participants in the federation.  Authentication/Authorisation(AAS) Service designed to authenticate users and systems in a decentralised, trustworthy, and self-sovereign manner. Organisation CredentialManager (OCM) Digital Self-Sovereign Identity (SSI) wallets for organizations (participants), responsible for managing, issuing, and storing credentials. Personal Credential Manager (PCM)Digital SSI wallet utilised by individuals, typically in the form of a personal wallet, for managing and storing credentials. Trust Services API (TSA) Technical implementation ensuring policy enforcement for the decentralised and self-sovereign components within Gaia-X. Notarisation Service (NOT)Service designed to handle notarisation requests and issue legally-binding, digital, and trustworthy credentials. Trust ManagementInfrastructure (TRAIN) Trust Management Infrastructure (TRAIN) supports the establishment and verification of the trust basis (root of trust) for Gaia-X participants and their credentials. It provides a flexible and interoperable infrastructure for managing trust relationships within distributed ecosystems.  ","version":"Next","tagName":"h2"},{"title":"Detailed Information and Links:​","type":1,"pageTitle":"","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/#detailed-information-and-links","content":"   Authentication/ Authorisation(AAS) Organisation CredentialManager (OCM) Personal CredentialManager (PCM) Trust Services API (TSA) Notarisation Service (NOT) Trust Management Infrastructure (TRAIN) ","version":"Next","tagName":"h3"},{"title":"Authentication/Authorisation (AAS)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/authentication","content":"Authentication/Authorisation (AAS) In this tender the lot “Authentication/ Authorization” is being awarded. The purpose of the service functions to be implemented is to enable Gaia-X participants to authenticate users and systems in a trustworthy and decentralized self-sovereign manner without the need for a central source of authority as well as to assure authorization of access and data usage based on such identity data and decentrally managed credentials. The Gaia-X concept of Authentication and Authorization is based on the SSI Standards W3C VerifiableCredentials and decentralized key management (DPKI) defined by the W3C DID Core Specification and extended with DIF Specifications for DID-based message exchange (DIDComm) supported by most OpenSource Agents like Hyperledger Aries (eg. ACA-Py) for proof request and presentation. At the core of this enablement stays integration and assurance of compatibility to the existing and well-established authentication protocols such as OpenID Connect and authorization frameworks like OAuth2 or enabling X.509-based mutual TLS authentication. Thus, the service function shall offer components which bridge between SSI-based authentication and the established OpenID Connect specification for authentication and request of claims including related proofs. In the same manner a bridge function shall be offered to authenticate system-to-system interactions utilizing OAuth2 authorization framework, with dynamic client registration and establishing trustworthy mutual TLS-authentication link backed by SSI-based self-sovereign and decentralized authentication and authorization. The overall scope of the service functions enables – by application of supporting SSI shell components, such as SSI OIDC Provider and SSI IAT Provider – to employ any OAuth2/OIDC standards-based local IAM solution for decentralized authentication and authorization within Gaia-X ecosystem. The components integrate with the other elements of the Identity &amp; Trust Work Package, e.g., “Trust Services API” and “Personal Credential Manager” (these services are being awarded in separate tenders) in order to fulfill their full scope of function. Repository","keywords":"","version":"Next"},{"title":"Notarisation Service (NOT)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/notarisation","content":"","keywords":"","version":"Next"},{"title":"NOT Extension​","type":1,"pageTitle":"Notarisation Service (NOT)","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/notarisation#not-extension","content":" The scope is to extend the existing component “Notarization API”, with the following new features:  Protocol agnostic issuances depending on the incoming DID and format definitionsNew issuance and verification protocolsBusiness validation flow for the notaryDocumentation for using NOT as the compliance service for membershipsDynamic schema configurationEnrollment of organization to certain trustlistsTrust verification with the TRAIN module before the issuance processAutomatic Notarization Verification  The product extension will also include interfaces (API’s) to integrate the notarization component smoothly in external software for Non-IT operator usage (e.g., lawyers, notaries, governments, certifiers …).  Repository ","version":"Next","tagName":"h3"},{"title":"Organisation Credential Manager (OCM)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/organisation-credential","content":"","keywords":"","version":"Next"},{"title":"OCM W-Stack​","type":1,"pageTitle":"Organisation Credential Manager (OCM)","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/organisation-credential#ocm-w-stack","content":" The purpose of the OCM W-Stack is to provide all necessary components for the extension of the administration of the digital identity of a participant in the Gaia-X context. The OCM W-Stack enhances the participant’s interaction with the SSI-based ecosystem in a trustful and secure fashion. This comprises the utilization of the participants digital identity for different functionalities:  Implementation of Full W3C DID/VC/VP Support for Credential Exchange and TrustImplementation of OpenID Standards OpenID4VC/VPSIOPVC Issuance ProtocolExtension Establishment of secure and trustable connections with other partiesRequest and reception of verifiable credentials from attesting parties (e.g., Gaia-X Membership credential from a verified notary) in JSON-LD FormatAttestation of attributes to principals in the form of verifiable credentials (e.g., employees, technical assets)Validation of received verifiable presentations from other parties (e.g., validation of Gaia-X membership of other participants)Maintenance of the verifiable Public ProfileScalable VC/VP StorageGraph Indexing for Linking VC/VP  Same as the OCM the OCM W-Stack prioritize W3C compatibility, but technologically the OCM W-Stack will be a non-Indy implementation to become independent of Hyperledger Indy and maximize interoperability.  Repository ","version":"Next","tagName":"h3"},{"title":"Trust Management Infrastructure (TRAIN)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/trust-management","content":"Trust Management Infrastructure (TRAIN) We are introducing a new component into the XFSC Toolbox called “Trust Management Infrastructure” (TRAIN). TRAIN supports with establishing and verifying the trust basis (root of trust) for participants in the Gaia-X distributed ecosystem and the credentials issued by those entities. Thus, TRAIN plays a pivotal role in building trust within the Gaia-X ecosystem, providing a flexible and interoperable infrastructure for entities to establish and manage trust relationships. This is achieved through the introduction of trust lists combined with anchoring of pointers in the DNS. Gaia-X Federations and other entities are supported in the sovereign publication and administration of trust lists for their specific trust frameworks. Verifying entities are supported in their sovereign trust decisions. To achieve this, the following functionalities will be developed: Trust Framework ConfigurationTrust List ManagementZone Manager HandlerTrusted Content Resolver (Extended Universal Resolver) + LibrariesDNS Zone Manager Please note that the libraries are intentional for different languages such as GO, Java, Python and JavaScript. It’s also intentional to create the libraries as helpers for using the extended universal resolver, by adding content resolver steps, validation routines for VC and other assistive functionalities. Repository","keywords":"","version":"Next"},{"title":"Personal Credential Manager (PCM)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/personal-credential","content":"","keywords":"","version":"Next"},{"title":"PCM Extension​","type":1,"pageTitle":"Personal Credential Manager (PCM)","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/personal-credential#pcm-extension","content":" The purpose of the PCM is to provide all necessary components for the self-sovereign administration of the digital identity of a principal in the Gaia-X context on a mobile device. The PCM enables a natural person to act as a principal of an organization within the SSI-based Gaia-X ecosystem in a privacy-preserving, trustful and secure way. The extension comprises the following main functionalities:  AIP 2.0 SupportReception and management of updated W3C verifiable credentialsPresenting W3C and AIP 2.0 Verifiable Presentations to other parties in a proved mannerSecure storage and management of respective secretsRemote Management of the PCM Cloud SolutionSupport of the PCM Cloud functionalityEnhancements in QR Code Support Reading and PresentationFurthermore, the scope includes the provision of the developed software in a usable format for end users including the respective distribution channels (e.g., App Stores).  Repository  ","version":"Next","tagName":"h3"},{"title":"PCM Cloud​","type":1,"pageTitle":"Personal Credential Manager (PCM)","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/personal-credential#pcm-cloud","content":" We are also introducing a PCM that can be interacted with by computer browser, thus giving you an alternative to the existing PCM App. The purpose of the PCM Cloud is the same as the existing PCM App – to provide all necessary components for the self-sovereign administration of the digital identity of a principal in the Gaia-X context. The PCM Cloud enables a natural person to act as a principal of an organization within the SSI-based Gaia-X ecosystem in a privacy-preserving, trustful and secure way from a computer browser. This comprises the following main functionalities:  Remote Management of a Cloud Wallet or multiple Wallets which are connected to the PCM CloudReception and management of verifiable credentials from other parties (e.g., a principal credential from a Gaia-X participant) by using the web frontendPresenting Verifiable Presentations to other parties in an automated or manual manner by using pluginsSecure storage and management of respective secretsConsent ManagementPolicy Based Decisions about Issuing/PresentationsPlugin System which extends the Holder Capabilities  The PCM Cloud is designed as a cloud-based component offering a user-friendly web interface for managing OCM, OCM W-Stack, and TSA. It serves as an integration layer, facilitating various Holder use cases. The PCM Cloud orchestrates these use cases through plugins, such as the “ID Card Proof Plugin,” enabling functions like automatic ID card verification.  Repository ","version":"Next","tagName":"h3"},{"title":"Trust Services API (TSA)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/trust-service","content":"","keywords":"","version":"Next"},{"title":"TSA Extension​","type":1,"pageTitle":"Trust Services API (TSA)","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/icam-and-trust/trust-service#tsa-extension","content":" The aim of the Trust Services API Extension is to ensure a consistent level of trust between Gaia-X participants and components. The Trust Services API can be used by all other XFSC components. The creation and validation of digital signatures plays a particularly important role here. The product scope includes signing and verifying of necessary data, enabling policy driven trust, ensuring trust-chains between participants and validating eIDAS compliant signatures.  The scope also includes necessary tools (e.g., Command Line Scripts) to operate and maintain the created software components in an enterprise environment with focus on high-availability, security and monitoring and logging based on common standards.  The main updates/extensions are:  Extended policy managementComponent is made more “manageable” for deploymentSignature services are designed for eIDAS compliant signatures and verificationsTSA gets integration interface via cloud events and web hooksConfigurability is extendedJSON schema validation is added  Repository ","version":"Next","tagName":"h3"},{"title":"Continuous Automated Monitoring (CAM)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/continuous-automated","content":"Continuous Automated Monitoring (CAM) The &quot;Continuous Automated Monitoring&quot; service provides participants with transparency regarding the compliance status of individual service offerings within the Federated Catalogue. It continuously gathers, evaluates, and visualises compliance-relevant information about services, offering participants insights into the adherence of these offerings to specific requirements and rules set by a Federation. Repository","keywords":"","version":"Next"},{"title":"Orchestration & Monitoring","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/","content":"","keywords":"","version":"Next"},{"title":"Orchestration Engine (ORCE)​","type":1,"pageTitle":"Orchestration & Monitoring","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/#orchestration-engine-orce","content":" ORCE is a software tool essential for sequentially managing and executing tasks, ensuring a seamless flow of data within the ecosystem. Its primary role is to connect complex services and aplications, promoting smooth communication and interaction. The Workflow Engine enhances complex application networking, focusing on tasks like implementing Onboarding &amp; Accreditation workflows for federations. Additionally, it includes features for sample service orchestration, provisioning, and compliance monitoring based on EUCS metrics.  ","version":"Next","tagName":"h3"},{"title":"Service Mesh Automation (Orchestration, ORC)​","type":1,"pageTitle":"Orchestration & Monitoring","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/#service-mesh-automation-orchestration-orc","content":" ORC function is to manage services selected or created in the Portal by a Participant. It deploys, updates, and deletes services based on actions from the Consumer or Provider. Providing feedback on service status, the Orchestration is accessible through the Portal or directly by a Participant. It defines an API standard for developing &quot;Life Cycle Management (LCM) Services,&quot; specialised components for deploying and managing services across different technologies. The central &quot;LCM Engine&quot; coordinates various LCM Services, interfaces with the Portal, and communicates through the API Standard.  ","version":"Next","tagName":"h3"},{"title":"Continuous Automated Monitoring (CAM)​","type":1,"pageTitle":"Orchestration & Monitoring","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/#continuous-automated-monitoring-cam","content":" The &quot;Continuous Automated Monitoring&quot; service provides participants with transparency regarding the compliance status of individual service offerings within the Federated Catalogue. It continuously gathers, evaluates, and visualises compliance-relevant information about services, offering participants insights into the adherence of these offerings to specific requirements and rules set by a Federation.    Orchestration Engine (ORCE) Service Mesh Automation (Orchestration, ORC) Continuous Automated Monitoring (CAM) ","version":"Next","tagName":"h3"},{"title":"Orchestration Engine (ORCE)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/orchestration-engine","content":"Orchestration Engine (ORCE) ORCE is a software tool essential for sequentially managing and executing tasks, ensuring a seamless flow of data within the ecosystem. Its primary role is to connect complex services and aplications, promoting smooth communication and interaction. The Workflow Engine enhances complex application networking, focusing on tasks like implementing Onboarding &amp; Accreditation workflows for federations. Additionally, it includes features for sample service orchestration, provisioning, and compliance monitoring based on EUCS metrics. Repository","keywords":"","version":"Next"},{"title":"Portal","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/portal/","content":"Portal The Portal within XFSC toolbox serves as an integration layer, highlighting Federation Services and providing user-friendly access to onboarding, accreditation, service discovery, orchestration, and delivery. It includes key features such as searching, exploring, and displaying content from the Federated Catalogue. Users can register and onboard new Participants, accessing onboarding details, with the Federation approving registrations and issuing verified credentials. Furthermore, Participants can orchestrate and provision services through the portal. Repository","keywords":"","version":"Next"},{"title":"Service Mesh Automation (Orchestration, ORC)","type":0,"sectionRef":"#","url":"/landingpage/xfsc-toolbox/xfsc-foss-components/orchestration-monitoring/service-mash","content":"Service Mesh Automation (Orchestration, ORC) ORC function is to manage services selected or created in the Portal by a Participant. It deploys, updates, and deletes services based on actions from the Consumer or Provider. Providing feedback on service status, the Orchestration is accessible through the Portal or directly by a Participant. It defines an API standard for developing &quot;Life Cycle Management (LCM) Services,&quot; specialised components for deploying and managing services across different technologies. The central &quot;LCM Engine&quot; coordinates various LCM Services, interfaces with the Portal, and communicates through the API Standard. Repository","keywords":"","version":"Next"}],"options":{"id":"default"}}